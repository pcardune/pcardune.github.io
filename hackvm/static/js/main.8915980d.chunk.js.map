{"version":3,"sources":["IconButton.tsx","RustHackMachine.ts","RemoteFS.ts","HackEmulator.tsx","useHackMachine.ts","demos.ts","pages/emulator.tsx","pages/about.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["IconButton","icon","label","props","Button","className","role","aria-label","RustHackMachine","m","hack","profile","numCycles","this","n","WebVM","tick_profiled","tick","reset","console","log","get_stats","event","set_keyboard","key","value","undefined","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","charCodeAt","getKeyValue","ctx","draw_screen","program","init_panic_hook","machine","new","vmFiles","file","load_file","filename","text","init","RemoteFS","state","subscribers","url","callbacks","callback","indexOf","push","filter","cb","loading","error","data","fetch","then","res","ok","notifySubscribers","subscribe","a","Promise","resolve","reject","addFile","unsubscribe","urls","files","getFile","instance","HackEmulator","config","children","useState","speed","setSpeed","numInstructions","setNumInstructions","onTick","paused","initPaused","setLoading","setMachine","setPaused","canvasRef","useRef","useEffect","context","current","getContext","clearRect","canvas","width","height","get","getFiles","fetched","map","fetchState","parts","split","length","create","onTickInterval","startTime","Date","getTime","computeInterval","setInterval","clearInterval","renderInterval","drawScreen","onKeyDown","useCallback","preventDefault","stopPropagation","stopImmediatePropagation","setKeyboard","onKeyUp","window","addEventListener","removeEventListener","useHackMachine","Row","Col","md","ref","id","style","border","xs","onClick","disabled","Spinner","animation","Math","floor","Accordion","defaultActiveKey","Card","Toggle","as","Header","eventKey","Collapse","Body","Form","Group","Label","Control","type","min","max","onChange","e","parseInt","target","OSFiles","demos","pong","title","description","author","projectUrl","instructions","hackenstein3D","scroller","chunky","boing","EmulatorPage","useParams","demoId","demo","defaultConfig","Container","href","rel","AboutPage","span","offset","Object","keys","to","App","expanded","setExpanded","onSelectDemo","Navbar","bg","expand","onToggle","Brand","Link","Nav","NavDropdown","menuRole","focusFirstItemOnShow","Item","onSelect","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8915980d.chunk.js","sourcesContent":["import type { ButtonProps } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\n\ntype IconButtonProps = ButtonProps & { icon: string; label: string };\nconst IconButton = ({ icon, label, ...props }: IconButtonProps) => {\n  return (\n    <Button {...props}>\n      <i className={\"bi-\" + icon} role=\"img\" aria-label={label} />\n      {label}\n    </Button>\n  );\n};\n\nexport default IconButton;\n","import type { WebVM } from \"hackvm\";\n\ntype HackModule = typeof import(\"hackvm\");\n\nfunction getKeyValue(key: string) {\n  const keyMap: Record<string, number> = {\n    ArrowLeft: 130,\n    ArrowUp: 131,\n    ArrowRight: 132,\n    ArrowDown: 133,\n  };\n  let value = 0;\n  value = keyMap[key];\n  if (value === undefined) {\n    value = key.charCodeAt(0);\n  }\n  return value;\n}\n\nexport default class RustHackMachine {\n  static async create(program: {\n    vmFiles: { filename: string; text: string }[];\n  }): Promise<RustHackMachine> {\n    const hack = await import(\"hackvm\");\n    hack.init_panic_hook();\n    let machine;\n\n    machine = hack.WebVM.new();\n    for (let file of program.vmFiles) {\n      machine.load_file(file.filename, file.text);\n    }\n    machine.init();\n\n    return new RustHackMachine(machine, hack);\n  }\n\n  private m: WebVM;\n  private hack: HackModule;\n  private profile: boolean;\n  private constructor(m: WebVM, hack: HackModule) {\n    this.m = m;\n    this.hack = hack;\n    this.profile = false;\n  }\n\n  numCycles: number = 0;\n  tick(n: number): void {\n    if (this.profile && this.m instanceof this.hack.WebVM) {\n      this.m.tick_profiled(n);\n    } else {\n      this.m.tick(n);\n    }\n    this.numCycles += n;\n  }\n  reset(): void {\n    this.m.reset();\n    this.numCycles = 0;\n    if (this.profile && this.m instanceof this.hack.WebVM) {\n      console.log(this.m.get_stats());\n    }\n  }\n  setKeyboard(event: { key: string } | null): void {\n    this.m.set_keyboard(event ? getKeyValue(event.key) : 0);\n  }\n  drawScreen(ctx: CanvasRenderingContext2D): void {\n    this.m.draw_screen(ctx);\n  }\n}\n","export type FetchState = {\n  loading: boolean;\n  error: Response | null;\n  data: string;\n  url: string;\n};\n\ntype RemoteFSSubscription = (s: FetchState) => void;\n\nexport default class RemoteFS {\n  private static instance: RemoteFS;\n  static get() {\n    if (!RemoteFS.instance) {\n      RemoteFS.instance = new RemoteFS();\n    }\n    return RemoteFS.instance;\n  }\n\n  private state: Record<string, FetchState> = {};\n  private subscribers: Record<string, RemoteFSSubscription[]> = {};\n\n  private constructor() {}\n\n  private notifySubscribers(url: string) {\n    const callbacks = this.subscribers[url] || [];\n    for (const callback of callbacks) {\n      callback({ ...this.state[url] });\n    }\n  }\n\n  subscribe(url: string, callback: RemoteFSSubscription) {\n    if (!this.subscribers[url]) {\n      this.subscribers[url] = [];\n    }\n\n    if (this.subscribers[url].indexOf(callback) === -1) {\n      this.subscribers[url].push(callback);\n      callback(this.state[url]);\n    }\n  }\n\n  unsubscribe(url: string, callback: RemoteFSSubscription) {\n    if (this.subscribers[url]) {\n      this.subscribers[url] = this.subscribers[url].filter(\n        (cb) => cb !== callback\n      );\n    }\n  }\n\n  addFile(url: string, callback?: RemoteFSSubscription) {\n    if (!this.state[url]) {\n      this.state[url] = { loading: true, error: null, url, data: \"\" };\n      fetch(url).then((res) => {\n        if (res.ok) {\n          res.text().then((data) => {\n            this.state[url] = { loading: false, error: null, url, data };\n            this.notifySubscribers(url);\n          });\n        } else {\n          this.state[url] = { loading: false, error: res, url, data: \"\" };\n          this.notifySubscribers(url);\n        }\n      });\n    }\n\n    if (callback) {\n      this.subscribe(url, callback);\n    }\n\n    return this.state[url];\n  }\n\n  async getFile(url: string): Promise<FetchState> {\n    return new Promise((resolve, reject) => {\n      const callback = (file: FetchState) => {\n        if (!file.loading) {\n          if (!file.error) {\n            resolve(file);\n            this.unsubscribe(url, callback);\n          } else {\n            reject(file);\n            this.unsubscribe(url, callback);\n          }\n        }\n      };\n      this.addFile(url, callback);\n    });\n  }\n\n  async getFiles(urls: string[]): Promise<FetchState[]> {\n    let files: FetchState[] = [];\n    for (const url of urls) {\n      const file = await this.getFile(url);\n      files.push(file);\n    }\n    return files;\n  }\n}\n","import { useState, useCallback, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport IconButton from \"./IconButton\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport useHackMachine from \"./useHackMachine\";\nimport type RustHackMachine from \"./RustHackMachine\";\n\ntype HackEmulatorProps = {\n  urls: string[];\n  config: { speed: number };\n  children?: React.ReactNode;\n};\nconst HackEmulator = ({ urls, config, children }: HackEmulatorProps) => {\n  const [speed, setSpeed] = useState(config.speed);\n  const [numInstructions, setNumInstructions] = useState(0);\n\n  const { loading, canvasRef, paused, setPaused, reset } = useHackMachine(\n    urls,\n    {\n      paused: false,\n      speed,\n      onTick: useCallback((machine: RustHackMachine) => {\n        setNumInstructions(machine.numCycles / 1000);\n      }, []),\n    }\n  );\n\n  useEffect(() => {\n    setSpeed(config.speed);\n    setNumInstructions(0);\n  }, [urls, config]);\n\n  const togglePause = () => setPaused(!paused);\n\n  return (\n    <Row>\n      <Col md={8}>\n        <Row>\n          <Col>\n            <canvas\n              ref={canvasRef}\n              id=\"myCanvas\"\n              width=\"512\"\n              height=\"256\"\n              style={{ border: \"1px solid black\", width: \"100%\" }}\n            />\n          </Col>\n        </Row>\n        <Row className=\"justify-content-between\">\n          <Col xs=\"auto\">\n            <IconButton\n              onClick={togglePause}\n              label={paused ? \"Play\" : \"Pause\"}\n              icon={paused ? \"play-fill\" : \"pause-fill\"}\n              disabled={loading}\n              className=\"mr-2\"\n            />\n            <IconButton\n              icon=\"arrow-counterclockwise\"\n              label=\"Reset\"\n              onClick={reset}\n              disabled={numInstructions <= 0}\n              className=\"mr-2\"\n            />\n          </Col>\n          <Col xs=\"5\">\n            {loading ? (\n              <span>\n                <Spinner animation=\"border\" role=\"status\"></Spinner> Loading...\n              </span>\n            ) : (\n              <p className=\"mt-1\">\n                step:{\" \"}\n                <span className=\"font-monospace\">\n                  {Math.floor(numInstructions)}\n                </span>\n                k\n              </p>\n            )}\n          </Col>\n        </Row>\n      </Col>\n      <Col md={4}>\n        {children}\n        <Accordion defaultActiveKey=\"0\">\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              Configuration\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n                <Form>\n                  <Form.Group>\n                    <Form.Label>Steps / Cycle: {speed}</Form.Label>\n                    <Form.Control\n                      type=\"range\"\n                      min={500}\n                      max={100000}\n                      value={speed}\n                      className=\"form-range\"\n                      onChange={(e) => setSpeed(parseInt(e.target.value))}\n                    />\n                  </Form.Group>\n                </Form>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </Col>\n    </Row>\n  );\n};\n\nexport default HackEmulator;\n","import { useEffect, useState, useRef, useCallback } from \"react\";\nimport RustHackMachine from \"./RustHackMachine\";\nimport RemoteFS from \"./RemoteFS\";\n\nexport default function useHackMachine(\n  url: string[],\n  {\n    speed,\n    onTick,\n    paused: initPaused = true,\n  }: {\n    speed: number;\n    onTick?: (machine: RustHackMachine, elapsedTimeMs: number) => void;\n    paused?: boolean;\n  }\n) {\n  const [loading, setLoading] = useState(false);\n  const [machine, setMachine] = useState<RustHackMachine>();\n  const [paused, setPaused] = useState(initPaused);\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    setPaused(initPaused);\n    setMachine(undefined);\n    setLoading(true);\n    const context = canvasRef.current?.getContext(\"2d\");\n    context &&\n      context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n    (async () => {\n      const fetched = await RemoteFS.get().getFiles(url);\n      const vmFiles = fetched.map((fetchState) => {\n        const parts = fetchState.url.split(\"/\");\n        const filename = parts[parts.length - 1];\n        return { filename, text: fetchState.data };\n      });\n      setMachine(await RustHackMachine.create({ vmFiles }));\n      setLoading(false);\n    })();\n  }, [url]);\n\n  useEffect(() => {\n    if (!machine) return;\n    if (paused) return;\n    const startTime = new Date().getTime();\n    const computeInterval = setInterval(() => {\n      machine?.tick(speed);\n    }, 0);\n    let onTickInterval: NodeJS.Timeout;\n    if (onTick) {\n      onTickInterval = setInterval(\n        () => onTick(machine, new Date().getTime() - startTime),\n        1000 / 30\n      );\n    }\n    return () => {\n      onTickInterval && clearInterval(onTickInterval);\n      clearInterval(computeInterval);\n    };\n  }, [machine, paused, onTick, speed]);\n\n  useEffect(() => {\n    if (paused) return;\n    if (!machine) return;\n    const context = canvasRef.current?.getContext(\"2d\");\n    if (!context) return;\n    const renderInterval = setInterval(() => {\n      machine.drawScreen(context);\n    }, 1000 / 30);\n    return () => {\n      clearInterval(renderInterval);\n    };\n  }, [paused, machine]);\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      machine?.setKeyboard(event);\n    },\n    [machine]\n  );\n  const onKeyUp = useCallback(() => machine?.setKeyboard(null), [machine]);\n\n  useEffect(() => {\n    if (paused) return;\n    window.addEventListener(\"keydown\", onKeyDown);\n    window.addEventListener(\"keyup\", onKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n      window.removeEventListener(\"keyup\", onKeyUp);\n    };\n  }, [paused, onKeyDown, onKeyUp]);\n\n  const reset = () => {\n    if (!machine) return;\n    machine.reset();\n    const context = canvasRef.current?.getContext(\"2d\");\n    context && machine.drawScreen(context);\n    onTick && onTick(machine, 0);\n  };\n\n  return {\n    loading,\n    canvasRef,\n    paused,\n    setPaused,\n    reset,\n  };\n}\n","export const OSFiles = [\n  \"programs/OS/Array.vm\",\n  \"programs/OS/Keyboard.vm\",\n  \"programs/OS/Math.vm\",\n  \"programs/OS/Memory.vm\",\n  \"programs/OS/Output.vm\",\n  \"programs/OS/Screen.vm\",\n  \"programs/OS/String.vm\",\n  \"programs/OS/Sys.vm\",\n];\n\ntype Demo = {\n  title: string;\n  description?: string;\n  files: string[];\n  projectUrl: string;\n  author: string;\n  ticksPerCycle?: number;\n  instructions?: string;\n  config?: { speed?: number };\n};\n\nconst demos: Record<string, Demo> = {\n  pong: {\n    title: \"Pong\",\n    description:\n      \"The classic game of pong that's part of the Nand2Tetris course.\",\n    author: \"Noam Nisan and Shimon Schocken (creators of Nand2Tetris)\",\n    projectUrl: \"https://www.nand2tetris.org/\",\n    instructions: \"Use the arrow keys to move the paddle.\",\n    config: { speed: 5000 },\n    files: [\n      \"programs/Pong/Bat.vm\",\n      \"programs/Pong/Ball.vm\",\n      \"programs/Pong/Main.vm\",\n      \"programs/Pong/PongGame.vm\",\n    ],\n  },\n  hackenstein3D: {\n    title: \"Hackenstein 3D\",\n    description: \"A (very) simple first-person shooter / 3D maze game.\",\n    author: \"James Leibert\",\n    projectUrl: \"https://github.com/QuesterZen/hackenstein3D\",\n    files: [\n      \"https://raw.githubusercontent.com/QuesterZen/hackenstein3D/master/dist/Display.vm\",\n      \"https://raw.githubusercontent.com/QuesterZen/hackenstein3D/master/dist/Main.vm\",\n      \"https://raw.githubusercontent.com/QuesterZen/hackenstein3D/master/dist/Player.vm\",\n      \"https://raw.githubusercontent.com/QuesterZen/hackenstein3D/master/dist/Walls.vm\",\n    ],\n  },\n  scroller: {\n    title: \"Scroller\",\n    description: \"A demo of scrolling text across the screen.\",\n    author: \"Gavin Stewart\",\n    projectUrl: \"https://github.com/gav-/Nand2Tetris-Games_and_Demos\",\n    config: { speed: 5000 },\n    files: [\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASscroller/GASscroller.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASscroller/Main.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASscroller/MathsToo.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASscroller/MemoryToo.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASscroller/Sinus.vm\",\n    ],\n  },\n  chunky: {\n    title: \"Chunky\",\n    description: \"A bouncing ball animation.\",\n    author: \"Gavin Stewart\",\n    projectUrl: \"https://github.com/gav-/Nand2Tetris-Games_and_Demos\",\n    files: [\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/ChunkyImage.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/Dither4x4.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/GASchunky.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/Head.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/Image.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/Main.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/MathsToo.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/MemoryToo.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/Monitor.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/Plasma.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/RotoZoom.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASchunky/Sinus.vm\",\n    ],\n  },\n  boing: {\n    title: \"Boing\",\n    description: \"A real-time plasma and rotozoom demo.\",\n    author: \"Gavin Stewart\",\n    projectUrl: \"https://github.com/gav-/Nand2Tetris-Games_and_Demos\",\n    config: { speed: 5000 },\n    files: [\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/GASboing.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/Image.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/Main.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/MathsToo.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/MemoryToo.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/Sinus.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/ball01.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/ball02.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/ball03.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/ball04.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/ball05.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/ball06.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/ball07.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/ball08.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/shadow01.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/shadow02.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/shadow03.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/shadow04.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/shadow05.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/shadow06.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/shadow07.vm\",\n      \"https://raw.githubusercontent.com/gav-/Nand2Tetris-Games_and_Demos/master/GASboing/shadow08.vm\",\n    ],\n  },\n};\n\nexport default demos;\n","import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport HackEmulator from \"../HackEmulator\";\n\nimport demos, { OSFiles } from \"../demos\";\nimport { useParams } from \"react-router\";\n\nfunction EmulatorPage() {\n  const { demoId = \"pong\" } = useParams<{ demoId: string }>();\n\n  const demo = demos[demoId];\n  const urls = demo ? [...demo.files, ...OSFiles] : [];\n  const defaultConfig = { speed: 20000 };\n  const config =\n    demo && demo.config ? { ...defaultConfig, ...demo.config } : defaultConfig;\n\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <strong className=\"fs-5\">{demo.title}</strong> - {demo.description}{\" \"}\n          <a href={demo.projectUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            [source code]\n          </a>\n          <p>by {demo.author} </p>\n        </Col>\n      </Row>\n      <HackEmulator urls={urls} config={config}>\n        {demo.instructions && <p>{demo.instructions}</p>}\n      </HackEmulator>\n    </Container>\n  );\n}\n\nexport default EmulatorPage;\n","import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Link } from \"react-router-dom\";\nimport demos from \"../demos\";\nfunction AboutPage() {\n  return (\n    <Container>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }}>\n          <h3>About</h3>\n          <p>\n            I recently finished reading{\" \"}\n            <a\n              href=\"https://www.nand2tetris.org/book\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              The Elements of Computing Systems\n            </a>\n            , which walks through building a complete computing system from\n            logic gates all the way through to the implementation of a high\n            level programming language and basic operating system. The book is\n            part of a course called{\" \"}\n            <a\n              href=\"https://www.nand2tetris.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Nand to Tetris\n            </a>\n            , created by Noam Nisan and Shimon Schocken, which is taught online\n            and in person.\n          </p>\n          <p>\n            In an effort to continue the fun, and learn some more stuff, I\n            decided to recreate the virtual machine emulator program that comes\n            with the book in a way that will run inside a web browser, without\n            having to download anything. The emulator is written in{\" \"}\n            <a\n              href=\"https://www.rust-lang.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Rust\n            </a>{\" \"}\n            and compiled to{\" \"}\n            <a\n              href=\"https://webassembly.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Web Assembly\n            </a>\n            , with some javascript glue code to handle canvas rendering and\n            keyboard events.\n          </p>\n          <p>\n            Checkout some of the demo programs (which other people wrote)\n            running on the emulator:\n          </p>\n          <ul>\n            {Object.keys(demos).map((demoId) => (\n              <li key={demoId}>\n                <Link to={`/emulator/${demoId}`}>{demos[demoId].title}</Link> -{\" \"}\n                {demos[demoId].description} By {demos[demoId].author}.\n              </li>\n            ))}\n          </ul>\n          <p>\n            All the source code for the virtual machine implementation and this\n            website is available{\" \"}\n            <a\n              href=\"https://github.com/pcardune/hackvm\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              on github\n            </a>\n            .\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default AboutPage;\n","import { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Nav from \"react-bootstrap/Nav\";\nimport EmulatorPage from \"./pages/emulator\";\nimport AboutPage from \"./pages/about\";\nimport demos from \"./demos\";\n\nfunction App() {\n  const [expanded, setExpanded] = useState(false);\n  const onSelectDemo = () => {\n    setExpanded(false);\n  };\n  const onToggle = (expanded: boolean) => {\n    setExpanded(expanded);\n  };\n  return (\n    <Router>\n      <Navbar\n        bg=\"light\"\n        expand=\"lg\"\n        className=\"mb-2\"\n        expanded={expanded}\n        onToggle={onToggle}\n      >\n        <Navbar.Brand as={Link} to=\"/\">\n          Nand2Tetris VM Emulator\n        </Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\" role=\"\">\n            <Nav.Link as={Link} to=\"/\">\n              About\n            </Nav.Link>\n            <NavDropdown\n              title=\"Demos\"\n              id=\"basic-nav-dropdown\"\n              menuRole=\"\"\n              focusFirstItemOnShow={false}\n            >\n              {Object.keys(demos).map((demoId) => (\n                <NavDropdown.Item\n                  onSelect={onSelectDemo}\n                  key={demoId}\n                  as={Link}\n                  to={`/emulator/${demoId}`}\n                >\n                  {demos[demoId].title}\n                </NavDropdown.Item>\n              ))}\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/emulator/:demoId\">\n          <EmulatorPage />\n        </Route>\n        <Route path=\"/emulator\">\n          <EmulatorPage />\n        </Route>\n        <Route path=\"/\">\n          <AboutPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}